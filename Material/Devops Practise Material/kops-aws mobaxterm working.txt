sudo -i
yum update -y
yum install git -y
yum install docker -y
yum install python-pip -y
pip install awscli --upgrade --user
aws --version
aws configure

aws s3 mb s3://kops.vignesh.in

Install kubectl on Ubuntu Instance
curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
ls -l
chmod +x ./kubectl
sudo mv ./kubectl /usr/local/bin/kubectl
kubectl version


curl -LO https://github.com/kubernetes/kops/releases/download/1.12.3/kops-linux-amd64
chmod +x kops-linux-amd64
sudo mv kops-linux-amd64 /usr/local/bin/kops
kops version
exit

In ec2-user:
export KOPS_STATE_STORE=s3://kops.vignesh.in

ssh-keygen

kops create cluster --name=vignesh.in \
  --state=s3://kops.vignesh.in        \
  --zones=ap-southeast-2a,ap-southeast-2b,ap-southeast-2c \
  --master-zones=ap-south-1a                \
  --node-count=2                           \
  --node-size=t3.micro                    \
  --master-size=t3.micro                  \
  --dns-zone=vignesh.in    \
  --dns private    \
  --cloud aws                              \
  --yes

kops get cluster
kops update cluster vignesh.in
kops create secret --name vignesh.in sshpublickey admin -i ~/.ssh/id_rsa.pub

kops validate cluster
kubectl get nodes
kubectl cluster-info
kubectl get all

ssh -i ~/.ssh/id_rsa admin@api.vignesh.in
sudo hostname master
sudo vi /etc/hostname
   master

kubectl get all
kubectl get nodes
logout
logout

in ec2-user:

Copy Kubernetes Files from Git Hub:
git clone https://github.com/amit873/Kubernetes-YAML.git

cd Kubernetes-YAML/k8s/knote-Application
ls

kubectl get all
kubectl apply -f mongo.yaml
kubectl apply -f knote.yaml
kubectl get all

Test the Application
http://<Master-Public-IP>:<NodePort>/
http://<Nodel-Public-IP>:<NodePort>/
http://<Node2-Public-IP>:<NodePort>/

Remove the pods
kubectl delete -f mongo.yaml
kubectl delete -f knote.yaml
kubectl get all




kops delete cluster vignesh.in \
--state=s3://kops.vignesh.in  \
--yes

Suggestions:
 * validate cluster: kops validate cluster
 * list nodes: kubectl get nodes --show-labels
 * ssh to the master: ssh -i ~/.ssh/id_rsa admin@api.vignesh.in
 * the admin user is specific to Debian. If not using Debian please use the appropriate user based on your OS.
 * read about installing addons at: https://github.com/kubernetes/kops/blob/master/docs/addons.md.
















Steps:

    1  ls
    2  docker --version
    3  yum updagte
    4  yum update
    5  yum upgrage
    6  sudo yum update
    7  sudo yum install docker.io
    8  sudo yum install docker
    9  docker --version
   10  systemctl status docker
   11  systemctl start docker
   12  sudo systemctl start docker
   13  sudo systemctl status docker
   14  sudo systemctl enable docker
   15  sudo systemctl status docker
   16  clear
   17  yum install python-pip -y
   18  sudo yum install python-pip -y
   19  python --version
   20  pip --version
   21  sudo pip install awscli --upgrade --user
   22  aws --version
   23  aws configure
   24  aws s3 ls
   25  aws s3 mb s3://kops-state-test-7569 --region ap-south-1
   26  aws s3 ls
   27  curl -LO https://github.com/kubernetes/kops/releases/download/1.12.3/kops-linux-amd64
   28  chmod +x kops-linux-amd64
   29  sudo mv kops-linux-amd64 /usr/local/bin/kops
   30  kops version
   31  clear
   32  kops create cluster --name=mycluster.yourdomain.com   --state=s3://kops-state-test-7569          --zones=ap-south-1a,ap-south-1b,ap-south-1c   --master-zones=ap-south-1a                  --node-count=2                             --node-size=t3.micro                      --master-size=t3.micro                    --dns-zone=mycluster.yourdomain.com        --cloud aws                                --dns private                            \
   33  kops create cluster --name=mycluster.k8s.local   --state=s3://kops-state-test-7569          --zones=ap-south-1a,ap-south-1b,ap-south-1c   --master-zones=ap-south-1a                  --node-count=2                             --node-size=t3.micro                      --master-size=t3.micro                    --cloud aws                                --yes
   34  ls -la
   35  cd .ssh
   36  ls
   37  cd ..
   38  ssh-keygen
   39  cd .ssh
   40  ls
   41  cd ..
   42  clear
   43  kops create cluster --name=mycluster.k8s.local   --state=s3://kops-state-test-7569          --zones=ap-south-1a,ap-south-1b,ap-south-1c   --master-zones=ap-south-1a                  --node-count=2                             --node-size=t3.micro                      --master-size=t3.micro                    --cloud aws                                --yes
   44  kops create cluster --name=mycluster.kube.local   --state=s3://kops-state-test-7569          --zones=ap-south-1a,ap-south-1b,ap-south-1c   --master-zones=ap-south-1a                  --node-count=2                             --node-size=t3.micro                      --master-size=t3.micro                    --cloud aws                                --yes
   45  kops get cluster
   46  kops create cluster --name=mycluster.k8s.local   --state=s3://kops-state-test-7569          --zones=ap-south-1a,ap-south-1b,ap-south-1c   --master-zones=ap-south-1a                  --node-count=2                             --node-size=t3.micro                      --master-size=t3.micro                    --cloud aws                                --yes
   47  kops update cluster
   48  kops update cluster mycluster.k8s.local
   49  clear
   50  export KOPS_STATE_STORE=s3://kops-state-test-7569
   51  kops update cluster mycluster.k8s.local
   52  kops create secret --name mycluster.k8s.local sshpublickey admin -i ~/.ssh/id_rsa.pub
   53  kops get cluster
   54  kops validate cluster
   55  kops validate cluster --state=s3://kops-state-test-7569
   56  kops validate cluster mycluster.k8s.local --state=s3://kops-state-test-7569
   57  kops create cluster --name=mycluster.k8s.local   --state=s3://kops-state-test-7569          --zones=ap-south-1a,ap-south-1b,ap-south-1c   --master-zones=ap-south-1a                  --node-count=2                             --node-size=t3.micro                      --master-size=t3.micro                    --cloud aws                                --yes
   58  kops update cluster mycluster.k8s.local
   59  kops update cluster mycluster.k8s.local --yes
   60  kops validate cluster
   61  kubectl version
   62  curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
   63  chmod +x ./kubectl
   64  sudo mv ./kubectl /usr/local/bin/kubectl
   65  kubectl version
   66  kubectl get nodes
   67  kops get cluster
   68  kops validate cluster
   69  kubectl get nodes
   70  history

